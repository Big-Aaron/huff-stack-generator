/* Methods */
#define macro SET_VALUE2() = takes (2) returns (0) {
    0x04        // [0x04, $1, $0]
    0x04        // [0x04, 0x04, $1, $0]
    _XXX_YYY    // [_XXX_YYY: %0, 0x04, $1, $0]
    0x04        // [0x04, _XXX_YYY: %0, 0x04, $1, $0]
    __FUNC_SIG  // [__FUNC_SIG: %0, _XXX_YYY: %0, 0x04, $1, $0]
    0x55        // [0x55, __FUNC_SIG: %0, _XXX_YYY: %0, 0x04, $1, $0]
    lt          // [(0x55 < __FUNC_SIG: %0), _XXX_YYY: %0, 0x04, $1, $0]
    0x87        // [0x87, (0x55 < __FUNC_SIG: %0), _XXX_YYY: %0, 0x04, $1, $0]
    gt          // [(0x87 > (0x55 < __FUNC_SIG: %0)), _XXX_YYY: %0, 0x04, $1, $0]

    success:    // [(0x87 > (0x55 < __FUNC_SIG: %0)), _XXX_YYY: %0, 0x04, $1, $0]
       0x00     // [0x00, (0x87 > (0x55 < __FUNC_SIG: %0)), _XXX_YYY: %0, 0x04, $1, $0]
       0x00     // [0x00, 0x00, (0x87 > (0x55 < __FUNC_SIG: %0)), _XXX_YYY: %0, 0x04, $1, $0]
}

#define macro _XXX_YYY() = takes (1) returns (1) {
    0x06              // [0x06, $0]
    calldataload      // [calldataload(0x06), $0]
    [VALUE_LOCATION]  // [[VALUE_LOCATION], calldataload(0x06), $0]
    sstore            // [$0]
    0x69              // [0x69, $0]
    0x00              // [0x00, 0x69, $0]
}
